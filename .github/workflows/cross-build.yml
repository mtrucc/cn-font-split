name: Cross Build for ffi
on:
    workflow_dispatch:
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
        fail-fast: false
        matrix:
          platform:
            # - os-name: FreeBSD-x86_64
            #   runs-on: ubuntu-24.04
            #   target: x86_64-unknown-freebsd
            #   skip_tests: true

            - os-name: Linux-x86_64
              runs-on: ubuntu-24.04
              setup: sudo apt install -y musl-gcc
              target: x86_64-unknown-linux-musl

            - os-name: Linux-aarch64
              runs-on: ubuntu-24.04
              target: aarch64-unknown-linux-musl
              
            - os-name: Linux-riscv64
              runs-on: ubuntu-24.04
              target: riscv64gc-unknown-linux-gnu

            # - os-name: Windows-x86_64
            #   runs-on: windows-latest
            #   target: x86_64-pc-windows-msvc

            - os-name: macOS-x86_64
              runs-on: macOS-latest
              target: x86_64-apple-darwin

            # more targets here ...
    env:
        TZ: Asia/Shanghai
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Linux Environment
        if: ${{ runner.os == 'Linux' }}
        run: |
              sudo apt update
              sudo apt upgrade
              sudo apt install -y nodejs llvm clang pkg-config libssl-dev protobuf-compiler
              ${{ matrix.platform.setup }}
      - name: Build Node
        working-directory: ./packages/subsets-rs/crates/lang_unicodes
        run: |
           npm i
           npm run build

     
      - name: Set up Homebrew
        id: set-up-homebrew
        if: ${{ runner.os == 'macOS' }}
        uses: Homebrew/actions/setup-homebrew@master
      - name: Setup MacOS Environment
        if: ${{ runner.os == 'macOS' }}
        run: |
            brew install llvm protobuf automake libtool


      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          working-directory: ./packages/subsets-rs/
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release -p ffi"
          strip: false

      - name: Watch Release
        working-directory: ./packages/subsets-rs/
        run: |
          ls ./target/${{ matrix.platform.target }}/release/
          rm ./target/${{ matrix.platform.target }}/release/libffi.d
        shell: bash

      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.platform.target }}
          path: ./packages/subsets-rs/target/${{ matrix.platform.target }}/release/libffi.*
          if-no-files-found: error
      